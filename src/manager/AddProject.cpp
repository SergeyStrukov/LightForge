/* AddProject.cpp */
//----------------------------------------------------------------------------------------
//
//  Project: LightForge 1.00
//
//  License: Boost Software License - Version 1.0 - August 17th, 2003
//
//            see http://www.boost.org/LICENSE_1_0.txt or the local copy
//
//  Copyright (c) 2023 Sergey Strukov. All rights reserved.
//
//----------------------------------------------------------------------------------------

#include "Command.h"
#include "Reader.h"

namespace App {

static Path Relative(const Path &path,const Path &base)
 {
  return path.lexically_relative(base);
 }

void CreateProjectMakefile(const Path &folder,const Path &projRoot)
 {
  std::ofstream out(folder/"Makefile-project");

  out << "# Makefile-project AUTOGENERATED, DON'T EDIT\n\n" ;

  out << "PROJECT_PATH = " << Relative(projRoot,folder).native() << " \n\n" ;

  out.close();

  if( !out )
    {
     throw std::runtime_error("'Makefile-project' creation error");
    }
 }

static void AddProject(const Path &forge,const char *build,const String &projName,Path projRoot,const std::vector<String> &baseList,const std::vector<TargetReader> &targets) // TODO
 {
  Path folder=forge/"build"/build/projName;

  if( !std::filesystem::create_directory(folder) )
    {
     std::cout << "Cannot create folder " << folder << std::endl ;

     throw std::runtime_error("create folder error");
    }

  CreateProjectMakefile(std::filesystem::canonical(folder),projRoot);

  // TODO
 }

void AddProject(Path curpath,Path forge,Path proj,const char *const*build,int buildCount)
 {
  if( !buildCount )
    {
     static const char *const buildStd[1]={"std"};

     build=buildStd;
     buildCount=1;
    }

  String infoFile=forge/"projects";

  ProjectListReader info(infoFile);

  Path projRoot=std::filesystem::canonical(curpath/proj);

  ProjectReader inp(projRoot/"PROJECT");

  const String &projName=inp.getName();
  const std::vector<String> &baseList=inp.getBaseList();

  info.addProject(projName,baseList);

  TargetListReader targets(projRoot);

  for(int ind=0; ind<buildCount ;ind++)
    {
     AddProject(forge,build[ind],projName,projRoot,baseList,targets.getList());
    }

  info.save(infoFile);
 }

} // namespace App
